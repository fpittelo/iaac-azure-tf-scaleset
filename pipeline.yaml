###  Test Pipeline

trigger:
- none

resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/feature

jobs:
  - job: configuration
    displayName: 'job run configuration'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: self
      clean: true
      fetchTags: 

    - task: TerraformInstaller@0
      displayName: 'terraform install'
      inputs:
        terraformVersion: 'latest'

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          #!/bin/bash
          git clone --branch feature https://github.com/fpittelo/iaac-azure-tf-scaleset
          exit

    - task: TerraformTaskV3@3
      displayName: 'terraform init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: 'iaac-azure-tf-scaleset'
        backendServiceArm: 'Pay-As-You-Go(a6f24a81-7804-44a9-b074-25a9781afd24)'
        backendAzureRmResourceGroupName: 'FRED'
        backendAzureRmStorageAccountName: 'iaaclabs'
        backendAzureRmContainerName: 'iaacazuretfscaleset'
        backendAzureRmKey: 'terraform.tfstate'

    - task: TerraformTaskV3@3
      displayName: 'Terraform validate'
      inputs:
        provider: 'azurerm'
        command: 'validate'
        workingDirectory: 'iaac-azure-tf-scaleset'

    - task: TerraformTaskV3@3
      displayName: 'Terraform Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: 'iaac-azure-tf-scaleset'
        commandOptions: '-out=main.tfplan'
        environmentServiceNameAzureRM: 'Pay-As-You-Go(a6f24a81-7804-44a9-b074-25a9781afd24)'

    - task: TerraformTaskV3@3
      inputs:
        provider: 'azurerm'
        command: 'apply'
        commandOptions: 'main.tfplan'
        workingDirectory: 'iaac-azure-tf-scaleset'
        environmentServiceNameAzureRM: 'Pay-As-You-Go(a6f24a81-7804-44a9-b074-25a9781afd24)'